# -*- coding: utf-8 -*-
"""RobotDogRotina.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PEG1wqeP6KNbJBlVdhigaq9-t_MEyzpf
"""
import socket
import time
from threading import Timer
from  Dog_Routines.Control import *
from  Dog_Routines.Ultrasonic import *
from  Dog_Routines.Buzzer import *

# Create object
control = Control()
ultra = Ultrasonic()
buzz = Buzzer()
number=-1

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind(('', 5000))
s.listen(5)
print('Server is now running.')

conn, addr = s.accept()
print("Connected by", addr)

flag=0

while True: 

    data = conn.recv(1024)
    number = int(data.decode("utf-8"))

    start_time=None

    distance = ultra.getDistance()
    if distance<=5 and start_time is None:
        start_time=time.time()
        print('Passou!!!!')
        
    elif distance > 5:
        start_time = None
        
    elif time.time() - start_time >=1:
        print ("Distance less than 0.3 for 1 sec")
        flag = flag+1
        buzz.run(1)
        time.sleep(200)
        buzz.run(0)      
        break

        
    if flag%2 == 0:
        if number==0: #If it classifies as 0, the robot is at rest
            control.stop()
        
        if number==1: #If it classifies as 1, walk forward
            control.forWard() #one step forward
            print("forWard")

        if number==2: #walk backward
            control.backWard()
            print("backWard")

        if number==3: #raise height
            control.upAndDown(20) #este? Ou o postureBalance?
            print("upAndDown")
            
        if number==4: #lower height
            control.upAndDown(20)
            print("upAndDown")
    
    else:
        if number==0: #If it classifies as 0, the robot is at rest
            control.stop()
        
        if number==1: 
            control.turnLeft() #one step forward
            print("turnLeft")

        if number==2: #walk backward
            control.turnRight()
            print("turnRight")

        if number==3: #raise height
            control.upAndDown(1) #este? Ou o postureBalance?
            print("upAndDown")
            
        if number==4: #lower height
            control.upAndDown(-1)
            print("upAndDown")